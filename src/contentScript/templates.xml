<templates>
    <t t-name="odoo_dev.SideBar">
        <div class="col-3 dev-sidebar" t-if="state.isVisible">
            <div class="dev-sidebar-header">
                <h4>Odoo Dev Tools</h4>
                <button id="close" t-on-click="closeSideBar"
                >close</button>
            </div>

            <div class="dev-sidebar-options">
                <button class="dev-sidebar-option" t-on-click="getRecordValues">
                    Get Record Values
                </button>
                <button class="dev-sidebar-option" t-on-click="getReports">
                    Get Reports
                </button>
                <button class="dev-sidebar-option" t-on-click="runModelMethodOpt">
                    Run Model Method
                </button>
            </div>

            <div class="dev-sidebar-output">
                <t t-if="state.recordFields.length">
                    <h4>Record Values</h4>
                    <t t-foreach="state.recordFields" t-as="field" t-key="field.key">
                        <div class="dev-sidebar-item">
                            <span style="flex: 1;">
                                <strong t-esc="field.key" />: <t t-esc="field.value" />
                            </span>
                            <FieldXpath record="props.record" fieldName="field.key" />
                        </div>
                    </t>
                </t>

                <t t-if="state.reports.length">
                    <h4>Reports</h4>
                    <t t-foreach="state.reports" t-as="report" t-key="report.id">
                        <div class="dev-sidebar-item">
                            <a t-att-href="report.url" target="_blank">
                                <strong t-esc="report.name" />
                            </a>
                        </div>
                    </t>
                </t>

                <t t-if="state.showRunModelMethod">
                    <h4>Run Model Method</h4>
                    <input type="text" t-ref="modelMethodInput" placeholder="Method Name"
                        class="dev-sidebar-input"
                    />
                    <button class="dev-sidebar-btn-run-method" t-on-click="runModelMethod">Run</button>

                    <t t-if="state.modelMethodOutput">
                        <div class="dev-sidebar-item"
                            style="display: flex; flex-direction: column; gap: 10px;">
                            <strong>Output</strong>
                            <pre style="flex: 1; margin-top: 10px;">
                <t t-esc="state.modelMethodOutput" />
            </pre>
                        </div>
                    </t>
                </t>
            </div>
        </div>
        <div class="floating-button" t-on-click="toggleSideBar">
            <i class="fa fa-bug"></i>
        </div>
    </t>

    <!-- Como se perdiÃ³ la bondad de heredar plantillas, ya que se hace desde python en el manifest -->
    <!-- ver el archivo de assets resultante, veras que no tiene t-inherit, porque se procesÃ³ en
    base/models/assetsbundle.py -->
    <t t-name="odoo_dev.FormView" t-inherit="web.FormView" t-inherit-mode="primary">
        <div t-att-class="className" t-ref="root">
            <div class="o_form_view_container">
                <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''"
                    display="display">
                    <t t-set-slot="control-panel-create-button">
                        <t t-if="canCreate">
                            <button type="button" class="btn btn-secondary o_form_button_create"
                                data-hotkey="c" t-on-click.stop="create">New</button>
                        </t>
                    </t>

                    <t t-set-slot="layout-buttons">
                        <t t-if="env.inDialog">
                            <t t-if="footerArchInfo">
                                <t t-component="props.Renderer" record="model.root"
                                    Compiler="props.Compiler" archInfo="footerArchInfo" />
                            </t>
                            <t t-else="">
                                <t t-call="{{ props.buttonTemplate }}" />
                            </t>
                        </t>
                    </t>

                    <t t-set-slot="layout-actions">
                        <t t-if="buttonBoxTemplate">
                            <t t-call="{{ buttonBoxTemplate }}"
                                t-call-context="{ __comp__: Object.assign(Object.create(this), { this, props: { ...this.props, record: this.model.root } }) }" />
                        </t>
                    </t>

                    <t t-set-slot="control-panel-additional-actions">
                        <CogMenu
                            getActiveIds="() => model.root.isNew ? [] : [model.root.resId]"
                            context="props.context"
                            items="props.info.actionMenus ? this.actionMenuItems : {}"
                            isDomainSelected="model.root.isDomainSelected"
                            resModel="model.root.resModel"
                            domain="props.domain"
                            onActionExecuted="() => model.load({ resId: model.root.resId, resIds: model.root.resIds })"
                            shouldExecuteAction.bind="shouldExecuteAction"
                        />
                    </t>

                    <t t-set-slot="control-panel-status-indicator">
                        <t t-if="canEdit">
                            <FormStatusIndicator model="model" discard.bind="discard"
                                save.bind="saveButtonClicked" />
                        </t>
                    </t>
                    <t t-set-slot="control-panel-create-button">
                        <t t-if="canCreate">
                            <button type="button"
                                class="btn btn-outline-primary o_form_button_create"
                                data-hotkey="c"
                                t-on-click.stop="create">New</button>
                        </t>
                    </t>
                    <t t-component="props.Renderer" record="model.root"
                        Compiler="props.Compiler"
                        archInfo="archInfo" translateAlert="translateAlert"
                        onNotebookPageChange.bind="onNotebookPageChange"
                        activeNotebookPages="props.state and props.state.activeNotebookPages" />
                </Layout>
                <SideBarDev record="model.root" />
            </div>
        </div>
    </t>

    <t t-name="odoo_dev.FieldTooltip">
        <span>Hola guap@, Â¿que ves? ðŸ˜Ž</span>
        <p t-if="field.help" class="o-tooltip--help" role="tooltip">
            <t t-esc="field.help" />
        </p>

        <ul class="o-tooltip--technical" role="tooltip">
            <li data-item="field" t-if="field and field.label">
                <span class="o-tooltip--technical--title">Label:</span>
                <t t-esc="field.label" />
            </li>
            <li data-item="field" t-if="field and field.name">
                <span class="o-tooltip--technical--title">Field:</span>
                <t t-esc="field.name" />
            </li>
            <li data-item="object" t-if="resModel">
                <span class="o-tooltip--technical--title">Model:</span>
                <t t-esc="resModel" />
            </li>
            <t t-if="field">
                <li t-if="field.type" data-item="type">
                    <span class="o-tooltip--technical--title">Type:</span>
                    <t t-esc="field.type" />
                </li>
                <li t-if="field.widget" data-item="widget">
                    <span class="o-tooltip--technical--title">Widget:</span>
                    <t t-if="field.widgetDescription" t-esc="field.widgetDescription" />
                    <t t-if="field.widget"> (<t t-esc="field.widget" />) </t>
                </li>
                <li t-if="field.context" data-item="context">
                    <span class="o-tooltip--technical--title">Context:</span>
                    <t t-esc="field.context" />
                </li>
                <li t-if="field.domain" data-item="domain">
                    <span class="o-tooltip--technical--title">Domain:</span>
                    <t t-esc="field.domain.length === 0 ? '[]' : field.domain" />
                </li>
                <li t-if="field.invisible" data-item="invisible">
                    <span class="o-tooltip--technical--title">Invisible:</span>
                    <t t-esc="field.invisible" />
                </li>
                <li t-if="field.column_invisible" data-item="column_invisible">
                    <span class="o-tooltip--technical--title">Column invisible:</span>
                    <t t-esc="field.column_invisible" />
                </li>
                <li t-if="field.required" data-item="required">
                    <span class="o-tooltip--technical--title">Required:</span>
                    <t t-esc="field.required" />
                </li>
                <li t-if="field.readonly" data-item="readonly">
                    <span class="o-tooltip--technical--title">Readonly:</span>
                    <t t-esc="field.readonly" />
                </li>
                <li t-if="field.default" data-item="default">
                    <span class="o-tooltip--technical--title">Default:</span>
                    <t t-esc="field.default" />
                </li>
                <li t-if="field.changeDefault" data-item="changeDefault">
                    <span class="o-tooltip--technical--title">Change default:</span> Yes </li>
                <li t-if="field.relation" data-item="relation">
                    <span class="o-tooltip--technical--title">Relation:</span>
                    <t t-esc="field.relation" />
                </li>
                <li t-if="field.selection" data-item="selection">
                    <span class="o-tooltip--technical--title">Selection:</span>
                    <ul class="o-tooltip--technical">
                        <li t-foreach="field.selection" t-as="option" t-key="option_index"> [<t
                                t-esc="option[0]" />] <t t-if="option[1]"> - </t>
                            <t
                                t-esc="option[1]" />
                        </li>
                    </ul>
                </li>
            </t>
        </ul>
    </t>

    <t t-name="odoo_dev.Field">
        <div t-att-name="props.name" t-att-class="classNames" t-att-style="props.style"
            t-att-data-devinfo-template="tooltip and 'odoo_dev.FieldTooltip'"
            t-att-data-devinfo-info="tooltip">
            <t t-component="field.component" t-props="fieldComponentProps" />
        </div>
    </t>

    <t t-name="odoo_dev.FormLabel">
        <label class="o_form_label" t-att-for="props.id"
            t-att-class="className"
            t-att="{'data-devinfo-template': 'odoo_dev.FieldTooltip', 'data-devinfo-info': tooltipInfo, 'data-devinfo-touch-tap-to-show': 'true'}"
        >
            <t t-esc="props.string" />
        </label>
    </t>

    <t t-name="odoo_dev.FieldXpath">
        <button class="copy-button" t-on-click="copyCode" aria-label="Copy code" title="Copy xpath">
            <svg class="copy-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                stroke-linecap="round" stroke-linejoin="round">
                <rect width="14" height="14" x="8" y="8" rx="2" ry="2"></rect>
                <path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"></path>
            </svg>
        </button>
    </t>

    <t t-name="odoo_dev.ListRenderer">
        <t t-set="_canSelectRecord" t-value="canSelectRecord" />
        <div
            class="o_list_renderer o_renderer table-responsive"
            t-att-class="uniqueRendererClass"
            tabindex="-1"
            t-ref="root"
        >
            <t t-if="showNoContentHelper" t-call="web.ActionHelper">
                <t t-set="noContentHelp" t-value="props.noContentHelp" />
            </t>
            <table
                t-attf-class="o_list_table table table-sm table-hover position-relative mb-0 {{props.list.isGrouped ? 'o_list_table_grouped' : 'o_list_table_ungrouped table-striped'}}"
                t-ref="table">
                <thead>
                    <tr>
                        <th t-if="hasSelectors"
                            class="o_list_record_selector o_list_controller align-middle pe-1 cursor-pointer"
                            tabindex="-1" t-on-keydown="(ev) => this.onCellKeydown(ev)"
                            t-on-click.stop="toggleSelection">
                            <CheckBox disabled="!_canSelectRecord" value="selectAll"
                                className="'d-flex m-0'" onChange.bind="toggleSelection" />
                        </th>
                        <t t-foreach="state.columns" t-as="column" t-key="column.id">
                            <th t-if="column.type === 'field'"
                                t-att-data-name="column.name"
                                t-att-class="getColumnClass(column) + ' opacity-trigger-hover'"
                                t-on-pointerup="onColumnTitleMouseUp"
                                t-on-click="() => this.onClickSortColumn(column)"
                                t-on-keydown="(ev) => this.onCellKeydown(ev)"
                                t-att-data-devinfo-template="isDebugMode ? 'odoo_dev.FieldTooltip' : 'web.ListHeaderTooltip'"
                                t-att-data-devinfo-info="makeTooltip(column)"
                                data-devinfo-delay="1000"
                                tabindex="-1">
                                <t t-if="column.hasLabel and column.widget !== 'handle'">
                                    <t t-set="isNumeric" t-value="isNumericColumn(column)" />
                                    <div
                                        t-att-class="{'d-flex': true, 'flex-row-reverse': shouldReverseHeader(column)}">
                                        <span class="d-block min-w-0 text-truncate flex-grow-1"
                                            t-att-class="isNumeric ? 'o_list_number_th' : ''"
                                            t-esc="column.label" />
                                        <i t-att-class="getSortableIconClass(column)" />
                                    </div>
                                    <span
                                        class="o_resize position-absolute top-0 end-0 bottom-0 ps-1 bg-black-25 opacity-0 opacity-50-hover z-index-1"
                                        t-on-pointerdown.stop.prevent="onStartResize" />
                                </t>
                            </th>
                            <th t-else="" t-on-keydown="(ev) => this.onCellKeydown(ev)"
                                t-att-class="{o_list_button: column.type === 'button_group'}" />
                        </t>
                        <th t-if="props.onOpenFormView"
                            t-on-keydown="(ev) => this.onCellKeydown(ev)"
                            class="o_list_open_form_view" />
                        <th t-if="displayOptionalFields or activeActions.onDelete"
                            t-on-keydown="(ev) => this.onCellKeydown(ev)"
                            class="o_list_controller o_list_actions_header position-sticky end-0">
                            <Dropdown t-if="displayOptionalFields"
                                class="'o_optional_columns_dropdown text-center border-top-0'"
                                togglerClass="'btn p-0'"
                                skipTogglerTabbing="true"
                                listRendererClass="uniqueRendererClass"
                                position="'bottom-end'">
                                <t t-set-slot="toggler">
                                    <i
                                        class="o_optional_columns_dropdown_toggle oi oi-fw oi-settings-adjust" />
                                </t>

                                <t t-foreach="optionalFieldGroups" t-as="group" t-key="group_index">
                                    <div t-if="!group_first" role="separator"
                                        class="dropdown-divider" />
                                    <DropdownItem t-if="group.displayName"
                                        parentClosingMode="'none'"
                                        onSelected="() => this.toggleOptionalFieldGroup(group.id)">
                                        <div class="fw-bold" t-esc="group.displayName" />
                                    </DropdownItem>
                                    <t t-foreach="group.optionalFields" t-as="field"
                                        t-key="field_index">
                                        <DropdownItem parentClosingMode="'none'"
                                            onSelected="() => this.toggleOptionalField(field.name)">
                                            <CheckBox
                                                onChange="() => this.toggleOptionalField(field.name)"
                                                value="field.value"
                                                name="field.name"
                                            >
                                                <span class="d-flex align-items-center">
                                                    <span class="text-truncate" t-esc="field.label" />
                                                    <span class="ps-1" t-if="env.debug"
                                                        t-esc="' (' + field.name + ')'" />
                                                </span>
                                            </CheckBox>
                                        </DropdownItem>
                                    </t>
                                </t>
                            </Dropdown>
                        </th>
                    </tr>
                </thead>
                <tbody class="ui-sortable">
                    <t t-call="{{ constructor.rowsTemplate }}">
                        <t t-set="list" t-value="props.list" />
                    </t>
                </tbody>
                <tfoot t-on-click="() => props.list.leaveEditMode()"
                    class="o_list_footer cursor-default"
                    t-att-class="{o_sample_data_disabled: props.list.model.useSampleModel}">
                    <tr>
                        <td t-if="hasSelectors" />
                        <t t-foreach="state.columns" t-as="column" t-key="column.id">
                            <t t-set="aggregate" t-value="aggregates[column.name]" />
                            <td t-if="aggregate" class="o_list_number">
                                <span t-esc="aggregate.value" t-att-data-tooltip="aggregate.help" />
                            </td>
                            <td t-else="" />
                        </t>
                        <td t-if="props.onOpenFormView" />
                        <td t-if="displayOptionalFields or activeActions.onDelete" />
                    </tr>
                </tfoot>
            </table>
        </div>
    </t>

</templates>